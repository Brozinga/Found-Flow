<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DatabaseSaveErrorMessage" xml:space="preserve">
    <value>Não foi possível salvar o(s) registro(s) no banco de dados, fale com um administrador.</value>
  </data>
  <data name="UserLoginAccountTemporaryBlockedMessage" xml:space="preserve">
    <value>O usuário está temporáriamente bloqueado.</value>
  </data>
  <data name="UsersEmailIsRegisteredMessage" xml:space="preserve">
    <value>O email já foi cadastrado.</value>
  </data>
  <data name="UsersValidationConfirmPasswordMessage" xml:space="preserve">
    <value>A confirmação de senha e a senha precisam ser iguais.</value>
  </data>
  <data name="UsersValidationMinLengthPasswordMessage" xml:space="preserve">
    <value>A senha precisa ter no mínimo {MinLength} caracter(es).</value>
  </data>
  <data name="UsersValidationMinLengthUserNameMessage" xml:space="preserve">
    <value>O nome do usuário deve conter ao menos {MinLength} caracter(es).</value>
  </data>
  <data name="UsersValidationNotificationMessage" xml:space="preserve">
    <value>O campo Notificação é obrigatório.</value>
  </data>
  <data name="UsersValidationPasswordComplexityMessage" xml:space="preserve">
    <value>A senha preicsa conter ao menos 1 letra maiúscula, 1 letra mínuscula e 1 número.</value>
  </data>
  <data name="UsersValidationPasswordMessage" xml:space="preserve">
    <value>A senha é inválida.</value>
  </data>
  <data name="UsersValidationUserNameMessage" xml:space="preserve">
    <value>O nome do usuário é inválido.</value>
  </data>
  <data name="UsersLoginAccountIsBlockedMessage" xml:space="preserve">
    <value>O usuário está bloqueado na plataforma.</value>
  </data>
  <data name="UsersLoginIncorrectMessage" xml:space="preserve">
    <value>Usuario ou senha inválido.</value>
  </data>
  <data name="UsersValidationEmailMessage" xml:space="preserve">
    <value>O email informado está incorreto.</value>
  </data>
  <data name="CategoriesValidationRequiredNameMessage" xml:space="preserve">
    <value>O nome da categoria é inválido.</value>
  </data>
  <data name="CategoriesValidationNameMinimumLengthMessage" xml:space="preserve">
    <value>O nome da categoria precisa ter no mínimo {MinLength} caracter(es).</value>
  </data>
  <data name="CategoriesValidationColorFormatMessage" xml:space="preserve">
    <value>A cor deve estar no formato hexadecimal (ex: #FFFFFF).</value>
  </data>
  <data name="CategoriesValidationColorRequiredMessage" xml:space="preserve">
    <value>A cor é obrigatória.</value>
  </data>
  <data name="CategoriesValidationUserIdMessage" xml:space="preserve">
    <value>O Id do usuário é obrigatório.</value>
  </data>
  <data name="CategoriesCategorieIsRegisteredMessage" xml:space="preserve">
    <value>A categoria já está cadastrada.</value>
  </data>
  <data name="UserNotFoundMessage" xml:space="preserve">
    <value>O usuário não foi encontrado.</value>
  </data>
  <data name="TokenJwtNotSentCorrectlyMessage" xml:space="preserve">
    <value>O Bearer token não foi enviado corretamente.</value>
  </data>
  <data name="CategoriesValidationIdCategorieRequireMessage" xml:space="preserve">
    <value>O Id da categoria é obrigatório.</value>
  </data>
  <data name="CategoriesValidationIdCategorieInvalidMessage" xml:space="preserve">
    <value>O Id de categoria precisa ser um GUID.</value>
  </data>
  <data name="CategoriesCategorieIsRegisteredWithNameMessage" xml:space="preserve">
    <value>Já existe uma categoria com esse nome.</value>
  </data>
  <data name="CategoriesCategorieNotFoundMessage" xml:space="preserve">
    <value>A categoria não foi encontrada.</value>
  </data>
  <data name="UsersNotFoundMessage" xml:space="preserve">
    <value>O usuário não foi encontrado.</value>
  </data>
  <data name="TransactionsTransactionNotFoundMessage" xml:space="preserve">
    <value>A transação não foi encontrada.</value>
  </data>
  <data name="TransactionsValidationAmountRequireMessage" xml:space="preserve">
    <value>O valor da transação é de no mínimo R$ {MinLength}.</value>
  </data>
  <data name="TransactionsValidationIdTransactionRequireMessage" xml:space="preserve">
    <value>O Id da transação é obrigatório.</value>
  </data>
  <data name="TransactionsValidationTitleRequireMessage" xml:space="preserve">
    <value>O Titulo da transação é obrigatório.</value>
  </data>
  <data name="TransactionsValidationTransactionTypeRequireMessage" xml:space="preserve">
    <value>O tipo de transição não está no formato correto.</value>
  </data>
  <data name="TransactionValidationPaymentDateFormatMessage" xml:space="preserve">
    <value>A data de pagamento/deposito precisa ser uma data válida.</value>
  </data>
  <data name="TransactionValidationPaymentDateRequireMessage" xml:space="preserve">
    <value>A data de pagamento/deposito é obrigatória.</value>
  </data>
  <data name="TransactionValidationPaymentStatusRequireMessage" xml:space="preserve">
    <value>O status de pagamento não está no formato correto.</value>
  </data>
</root>